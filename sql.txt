invoice count for each country 
SELECT "BillingCountry",count("InvoiceId") Invoices
FROM  "Invoice"
GROUP BY BillingCountry
ORDER BY 2 DESC


SELECT "BillingCity", sum("Total") amount
FROM  "Invoice"
GROUP BY BillingCity
ORDER BY 2 DESC
LIMIT 1


with cusid as (
SELECT "CustomerId", sum("Total") amount
FROM  "Invoice"
GROUP BY "CustomerId"
ORDER BY 2 DESC
LIMIT 1)
select FirstName ,cusid.amount
from Customer
JOIN cusid on cusid.CustomerId = Customer.CustomerId
where Customer.CustomerId =  cusid.CustomerId



*customer with genre rock
SELECT "Email" , "FirstName"  , "LastName" ,Genre."Name"
FROM "Customer"
JOIN invoice on Customer.CustomerId = Invoice.CustomerId
join InvoiceLine on invoice.InvoiceId = InvoiceLine.InvoiceId
join Track on InvoiceLine.TrackId = Track.TrackId
JOIN Genre on Genre.GenreId = Track.GenreId
where Genre.Name = "Rock"
ORDER by Email




* top ten rock artist based on count of tracks
SELECT Artist.ArtistId,Artist.Name , Track.AlbumId ,count(Artist.ArtistId) count
FROM Track
JOIN Genre on Genre.GenreId = Track.GenreId
JOIN Album on Album.AlbumId = Track.AlbumId
JOIN Artist on Artist.ArtistId = Album.ArtistId
where Genre.Name = "Rock"
GROUP by Artist.ArtistId
ORDER by count DESC
limit 10

*sales amount for each artist
SELECT Artist.ArtistId,Artist.Name ,sum(InvoiceLine.UnitPrice * InvoiceLine.Quantity) total_sales
FROM Track
JOIN Album on Album.AlbumId = Track.AlbumId
JOIN Artist on Artist.ArtistId = Album.ArtistId
JOIN InvoiceLine on InvoiceLine.TrackId = Track.TrackId
-- join Invoice on Invoice.InvoiceId = InvoiceLine.InvoiceId
GROUP by Artist.ArtistId 
order by total_sales DESC
LIMIT 1



*sales amount by each customer for top paid artist
with top_sales_arists as (
SELECT Artist.ArtistId,Artist.Name ,sum(InvoiceLine.UnitPrice * InvoiceLine.Quantity) total_sales
FROM Track
JOIN Album on Album.AlbumId = Track.AlbumId
JOIN Artist on Artist.ArtistId = Album.ArtistId
JOIN InvoiceLine on InvoiceLine.TrackId = Track.TrackId
GROUP by Artist.ArtistId 
order by total_sales DESC
LIMIT 1
), invoices as (
SELECT InvoiceLineId, top_sales_arists.Name 
From InvoiceLine 
JOIN Track on InvoiceLine.TrackId = Track.TrackId
JOIN Album on Album.AlbumId = Track.AlbumId
JOIN top_sales_arists on top_sales_arists.ArtistId = Album.ArtistId
)
select Customer.CustomerId,Customer.FirstName,customer.LastName ,sum (InvoiceLine.UnitPrice * InvoiceLine.Quantity) AmountSpent, Invoices.Name
FROM Customer 
JOIN Invoice on Invoice.CustomerId = Customer.CustomerId
join InvoiceLine on InvoiceLine.InvoiceId = Invoice.InvoiceId
-- where InvoiceLineId in invoices
JOIN invoices on invoices.InvoiceLineId = InvoiceLine.InvoiceLineId
GROUP by Customer.CustomerId
ORDER by AmountSpent DESC




*most popular music genre for each country
-- most genere (most parshes amount)
-- grououp by country 
--select Country ,genre ,(purches amount)

with count_genre_purchase as (SELECT BillingCountry , Genre.Name , count (InvoiceLine.InvoiceLineId) Purchases
FROM Invoice
join InvoiceLine on InvoiceLine.InvoiceId = Invoice.InvoiceId
JOIN Track on InvoiceLine.TrackId = Track.TrackId
JOIN Genre on Genre.GenreId = Track.GenreId
GROUP by BillingCountry, Genre.Name

),max_p as(
SELECT * , max( Purchases) from count_genre_purchase as c_g_p
GROUP by BillingCountry
)

SELECT cgp.BillingCountry , cgp.Name ,cgp.Purchases from count_genre_purchase as cgp
join max_p on cgp.BillingCountry =max_p.BillingCountry and 
	 cgp.Purchases = max_p.Purchases
ORDER by cgp.BillingCountry ASC , cgp.Purchases DESC



*song length where length greater than avg 
SELECT Track.Name , Track.Milliseconds
from Track 
WHERE Track.Milliseconds > (SELECT avg(Milliseconds) FROM Track)
ORDER by Milliseconds DESC




*top spent customer for each country 
with ts as (SELECT BillingCountry,Customer.CustomerId, FirstName,LastName,sum(Invoice.Total) TotalSpent
			FROM Customer 
			JOIN Invoice on Invoice.CustomerId = Customer.CustomerId
			GROUP by BillingCountry,Customer.CustomerId)

SELECT ts.* 
FROM ts
JOIN (SELECT * ,max(ts.TotalSpent)maxTs
		from ts 
		GROUP by ts.BillingCountry )as max_ts
	on ts.BillingCountry = max_ts.BillingCountry
	and ts.TotalSpent = max_ts.maxTs
